/*
 * generated by Xtext 2.14.0
 */
package inria.fuchsia.gag.gagdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GagDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigurationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRootKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRootAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRootTaskCrossReference_4_0 = (CrossReference)cRootAssignment_4.eContents().get(0);
		private final RuleCall cRootTaskEStringParserRuleCall_4_0_1 = (RuleCall)cRootTaskCrossReference_4_0.eContents().get(1);
		private final Keyword cConsistent_toKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConsistent_toAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cConsistent_toGAGCrossReference_6_0 = (CrossReference)cConsistent_toAssignment_6.eContents().get(0);
		private final RuleCall cConsistent_toGAGEStringParserRuleCall_6_0_1 = (RuleCall)cConsistent_toGAGCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Configuration:
		//	'Configuration'
		//	name=EString
		//	'{'
		//	'root' root=[Task|EString]
		//	'consistent_to' consistent_to=[specification::GAG|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Configuration' name=EString '{' 'root' root=[Task|EString] 'consistent_to' consistent_to=[specification::GAG|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Configuration'
		public Keyword getConfigurationKeyword_0() { return cConfigurationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'root'
		public Keyword getRootKeyword_3() { return cRootKeyword_3; }
		
		//root=[Task|EString]
		public Assignment getRootAssignment_4() { return cRootAssignment_4; }
		
		//[Task|EString]
		public CrossReference getRootTaskCrossReference_4_0() { return cRootTaskCrossReference_4_0; }
		
		//EString
		public RuleCall getRootTaskEStringParserRuleCall_4_0_1() { return cRootTaskEStringParserRuleCall_4_0_1; }
		
		//'consistent_to'
		public Keyword getConsistent_toKeyword_5() { return cConsistent_toKeyword_5; }
		
		//consistent_to=[specification::GAG|EString]
		public Assignment getConsistent_toAssignment_6() { return cConsistent_toAssignment_6; }
		
		//[specification::GAG|EString]
		public CrossReference getConsistent_toGAGCrossReference_6_0() { return cConsistent_toGAGCrossReference_6_0; }
		
		//EString
		public RuleCall getConsistent_toGAGEStringParserRuleCall_6_0_1() { return cConsistent_toGAGEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIs_openAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIs_openIs_openKeyword_0_0 = (Keyword)cIs_openAssignment_0.eContents().get(0);
		private final Keyword cTaskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdELongParserRuleCall_5_0 = (RuleCall)cIdAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAppliedRuleKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAppliedRuleAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAppliedRuleEStringParserRuleCall_6_1_0 = (RuleCall)cAppliedRuleAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInstance_ofKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cInstance_ofAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cInstance_ofServiceCrossReference_7_1_0 = (CrossReference)cInstance_ofAssignment_7_1.eContents().get(0);
		private final RuleCall cInstance_ofServiceEStringParserRuleCall_7_1_0_1 = (RuleCall)cInstance_ofServiceCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSub_taskKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cSub_taskAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cSub_taskTaskParserRuleCall_8_2_0 = (RuleCall)cSub_taskAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cSub_taskAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cSub_taskTaskParserRuleCall_8_3_1_0 = (RuleCall)cSub_taskAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Task:
		//	is_open?='is_open'?
		//	'Task'
		//	name=EString
		//	'{'
		//	'id' id=ELong ('appliedRule' appliedRule=EString)? ('instance_of' instance_of=[specification::Service|EString])?
		//	('sub_task' '{' sub_task+=Task ("," sub_task+=Task)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//is_open?='is_open'? 'Task' name=EString '{' 'id' id=ELong ('appliedRule' appliedRule=EString)? ('instance_of'
		//instance_of=[specification::Service|EString])? ('sub_task' '{' sub_task+=Task ("," sub_task+=Task)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//is_open?='is_open'?
		public Assignment getIs_openAssignment_0() { return cIs_openAssignment_0; }
		
		//'is_open'
		public Keyword getIs_openIs_openKeyword_0_0() { return cIs_openIs_openKeyword_0_0; }
		
		//'Task'
		public Keyword getTaskKeyword_1() { return cTaskKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'id'
		public Keyword getIdKeyword_4() { return cIdKeyword_4; }
		
		//id=ELong
		public Assignment getIdAssignment_5() { return cIdAssignment_5; }
		
		//ELong
		public RuleCall getIdELongParserRuleCall_5_0() { return cIdELongParserRuleCall_5_0; }
		
		//('appliedRule' appliedRule=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'appliedRule'
		public Keyword getAppliedRuleKeyword_6_0() { return cAppliedRuleKeyword_6_0; }
		
		//appliedRule=EString
		public Assignment getAppliedRuleAssignment_6_1() { return cAppliedRuleAssignment_6_1; }
		
		//EString
		public RuleCall getAppliedRuleEStringParserRuleCall_6_1_0() { return cAppliedRuleEStringParserRuleCall_6_1_0; }
		
		//('instance_of' instance_of=[specification::Service|EString])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'instance_of'
		public Keyword getInstance_ofKeyword_7_0() { return cInstance_ofKeyword_7_0; }
		
		//instance_of=[specification::Service|EString]
		public Assignment getInstance_ofAssignment_7_1() { return cInstance_ofAssignment_7_1; }
		
		//[specification::Service|EString]
		public CrossReference getInstance_ofServiceCrossReference_7_1_0() { return cInstance_ofServiceCrossReference_7_1_0; }
		
		//EString
		public RuleCall getInstance_ofServiceEStringParserRuleCall_7_1_0_1() { return cInstance_ofServiceEStringParserRuleCall_7_1_0_1; }
		
		//('sub_task' '{' sub_task+=Task ("," sub_task+=Task)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'sub_task'
		public Keyword getSub_taskKeyword_8_0() { return cSub_taskKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//sub_task+=Task
		public Assignment getSub_taskAssignment_8_2() { return cSub_taskAssignment_8_2; }
		
		//Task
		public RuleCall getSub_taskTaskParserRuleCall_8_2_0() { return cSub_taskTaskParserRuleCall_8_2_0; }
		
		//("," sub_task+=Task)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//sub_task+=Task
		public Assignment getSub_taskAssignment_8_3_1() { return cSub_taskAssignment_8_3_1; }
		
		//Task
		public RuleCall getSub_taskTaskParserRuleCall_8_3_1_0() { return cSub_taskTaskParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class GAGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.GAG");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGAGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRuleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRuleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRuleRuleParserRuleCall_5_0 = (RuleCall)cRuleAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRuleAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRuleRuleParserRuleCall_6_1_0 = (RuleCall)cRuleAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//GAG specification::GAG:
		//	'GAG'
		//	name=EString
		//	'{'
		//	'rule' '{' rule+=Rule ("," rule+=Rule)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'GAG' name=EString '{' 'rule' '{' rule+=Rule ("," rule+=Rule)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'GAG'
		public Keyword getGAGKeyword_0() { return cGAGKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'rule'
		public Keyword getRuleKeyword_3() { return cRuleKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//rule+=Rule
		public Assignment getRuleAssignment_5() { return cRuleAssignment_5; }
		
		//Rule
		public RuleCall getRuleRuleParserRuleCall_5_0() { return cRuleRuleParserRuleCall_5_0; }
		
		//("," rule+=Rule)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//rule+=Rule
		public Assignment getRuleAssignment_6_1() { return cRuleAssignment_6_1; }
		
		//Rule
		public RuleCall getRuleRuleParserRuleCall_6_1_0() { return cRuleRuleParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ELongElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.ELong");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ELong ecore::ELong:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cServiceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInputKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInputAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInputValueParserRuleCall_4_2_0 = (RuleCall)cInputAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInputAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInputValueParserRuleCall_4_3_1_0 = (RuleCall)cInputAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOutputAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOutputValueParserRuleCall_5_2_0 = (RuleCall)cOutputAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cOutputAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cOutputValueParserRuleCall_5_3_1_0 = (RuleCall)cOutputAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Service specification::Service:
		//	{specification::Service}
		//	'Service'
		//	name=EString
		//	'{' ('input' '{' input+=Value ("," input+=Value)* '}')? ('output' '{' output+=Value ("," output+=Value)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{specification::Service} 'Service' name=EString '{' ('input' '{' input+=Value ("," input+=Value)* '}')? ('output' '{'
		//output+=Value ("," output+=Value)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{specification::Service}
		public Action getServiceAction_0() { return cServiceAction_0; }
		
		//'Service'
		public Keyword getServiceKeyword_1() { return cServiceKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('input' '{' input+=Value ("," input+=Value)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'input'
		public Keyword getInputKeyword_4_0() { return cInputKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//input+=Value
		public Assignment getInputAssignment_4_2() { return cInputAssignment_4_2; }
		
		//Value
		public RuleCall getInputValueParserRuleCall_4_2_0() { return cInputValueParserRuleCall_4_2_0; }
		
		//("," input+=Value)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//input+=Value
		public Assignment getInputAssignment_4_3_1() { return cInputAssignment_4_3_1; }
		
		//Value
		public RuleCall getInputValueParserRuleCall_4_3_1_0() { return cInputValueParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('output' '{' output+=Value ("," output+=Value)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'output'
		public Keyword getOutputKeyword_5_0() { return cOutputKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//output+=Value
		public Assignment getOutputAssignment_5_2() { return cOutputAssignment_5_2; }
		
		//Value
		public RuleCall getOutputValueParserRuleCall_5_2_0() { return cOutputValueParserRuleCall_5_2_0; }
		
		//("," output+=Value)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//output+=Value
		public Assignment getOutputAssignment_5_3_1() { return cOutputAssignment_5_3_1; }
		
		//Value
		public RuleCall getOutputValueParserRuleCall_5_3_1_0() { return cOutputValueParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDefinedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cDefinedDefinedKeyword_0_0 = (Keyword)cDefinedAssignment_0.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueEJavaObjectParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSub_valueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cSub_valueAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cSub_valueValueParserRuleCall_5_2_0 = (RuleCall)cSub_valueAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cSub_valueAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cSub_valueValueParserRuleCall_5_3_1_0 = (RuleCall)cSub_valueAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Value specification::Value:
		//	defined?='defined'
		//	'Value'
		//	name=EString
		//	'{' ('value' value=EJavaObject)? ('sub_value' '{' sub_value+=Value ("," sub_value+=Value)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//defined?='defined' 'Value' name=EString '{' ('value' value=EJavaObject)? ('sub_value' '{' sub_value+=Value (","
		//sub_value+=Value)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//defined?='defined'
		public Assignment getDefinedAssignment_0() { return cDefinedAssignment_0; }
		
		//'defined'
		public Keyword getDefinedDefinedKeyword_0_0() { return cDefinedDefinedKeyword_0_0; }
		
		//'Value'
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('value' value=EJavaObject)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//value=EJavaObject
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//EJavaObject
		public RuleCall getValueEJavaObjectParserRuleCall_4_1_0() { return cValueEJavaObjectParserRuleCall_4_1_0; }
		
		//('sub_value' '{' sub_value+=Value ("," sub_value+=Value)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'sub_value'
		public Keyword getSub_valueKeyword_5_0() { return cSub_valueKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//sub_value+=Value
		public Assignment getSub_valueAssignment_5_2() { return cSub_valueAssignment_5_2; }
		
		//Value
		public RuleCall getSub_valueValueParserRuleCall_5_2_0() { return cSub_valueValueParserRuleCall_5_2_0; }
		
		//("," sub_value+=Value)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//sub_value+=Value
		public Assignment getSub_valueAssignment_5_3_1() { return cSub_valueAssignment_5_3_1; }
		
		//Value
		public RuleCall getSub_valueValueParserRuleCall_5_3_1_0() { return cSub_valueValueParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EJavaObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.EJavaObject");
		private final Keyword cEJavaObjectKeyword = (Keyword)rule.eContents().get(1);
		
		//EJavaObject ecore::EJavaObject:
		//	'EJavaObject' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EJavaObject'
		public Keyword getEJavaObjectKeyword() { return cEJavaObjectKeyword; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeft_hand_sideKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLeft_hand_sideAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cLeft_hand_sideServiceCrossReference_4_0 = (CrossReference)cLeft_hand_sideAssignment_4.eContents().get(0);
		private final RuleCall cLeft_hand_sideServiceEStringParserRuleCall_4_0_1 = (RuleCall)cLeft_hand_sideServiceCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRight_hand_side_serviceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRight_hand_side_serviceAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cRight_hand_side_serviceServiceCrossReference_5_2_0 = (CrossReference)cRight_hand_side_serviceAssignment_5_2.eContents().get(0);
		private final RuleCall cRight_hand_side_serviceServiceEStringParserRuleCall_5_2_0_1 = (RuleCall)cRight_hand_side_serviceServiceCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cRight_hand_side_serviceAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cRight_hand_side_serviceServiceCrossReference_5_3_1_0 = (CrossReference)cRight_hand_side_serviceAssignment_5_3_1.eContents().get(0);
		private final RuleCall cRight_hand_side_serviceServiceEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cRight_hand_side_serviceServiceCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGuardKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGuardAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cGuardGuardCrossReference_6_1_0 = (CrossReference)cGuardAssignment_6_1.eContents().get(0);
		private final RuleCall cGuardGuardEStringParserRuleCall_6_1_0_1 = (RuleCall)cGuardGuardCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Rule specification::Rule:
		//	'Rule'
		//	name=EString
		//	'{'
		//	'left_hand_side' left_hand_side=[specification::Service|EString] ('right_hand_side_service' '('
		//	right_hand_side_service+=[specification::Service|EString] (","
		//	right_hand_side_service+=[specification::Service|EString])* ')')? ('guard' guard=[specification::Guard|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Rule' name=EString '{' 'left_hand_side' left_hand_side=[specification::Service|EString] ('right_hand_side_service' '('
		//right_hand_side_service+=[specification::Service|EString] (","
		//right_hand_side_service+=[specification::Service|EString])* ')')? ('guard' guard=[specification::Guard|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//'Rule'
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'left_hand_side'
		public Keyword getLeft_hand_sideKeyword_3() { return cLeft_hand_sideKeyword_3; }
		
		//left_hand_side=[specification::Service|EString]
		public Assignment getLeft_hand_sideAssignment_4() { return cLeft_hand_sideAssignment_4; }
		
		//[specification::Service|EString]
		public CrossReference getLeft_hand_sideServiceCrossReference_4_0() { return cLeft_hand_sideServiceCrossReference_4_0; }
		
		//EString
		public RuleCall getLeft_hand_sideServiceEStringParserRuleCall_4_0_1() { return cLeft_hand_sideServiceEStringParserRuleCall_4_0_1; }
		
		//('right_hand_side_service' '(' right_hand_side_service+=[specification::Service|EString] (","
		//right_hand_side_service+=[specification::Service|EString])* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'right_hand_side_service'
		public Keyword getRight_hand_side_serviceKeyword_5_0() { return cRight_hand_side_serviceKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//right_hand_side_service+=[specification::Service|EString]
		public Assignment getRight_hand_side_serviceAssignment_5_2() { return cRight_hand_side_serviceAssignment_5_2; }
		
		//[specification::Service|EString]
		public CrossReference getRight_hand_side_serviceServiceCrossReference_5_2_0() { return cRight_hand_side_serviceServiceCrossReference_5_2_0; }
		
		//EString
		public RuleCall getRight_hand_side_serviceServiceEStringParserRuleCall_5_2_0_1() { return cRight_hand_side_serviceServiceEStringParserRuleCall_5_2_0_1; }
		
		//("," right_hand_side_service+=[specification::Service|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//right_hand_side_service+=[specification::Service|EString]
		public Assignment getRight_hand_side_serviceAssignment_5_3_1() { return cRight_hand_side_serviceAssignment_5_3_1; }
		
		//[specification::Service|EString]
		public CrossReference getRight_hand_side_serviceServiceCrossReference_5_3_1_0() { return cRight_hand_side_serviceServiceCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getRight_hand_side_serviceServiceEStringParserRuleCall_5_3_1_0_1() { return cRight_hand_side_serviceServiceEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//('guard' guard=[specification::Guard|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'guard'
		public Keyword getGuardKeyword_6_0() { return cGuardKeyword_6_0; }
		
		//guard=[specification::Guard|EString]
		public Assignment getGuardAssignment_6_1() { return cGuardAssignment_6_1; }
		
		//[specification::Guard|EString]
		public CrossReference getGuardGuardCrossReference_6_1_0() { return cGuardGuardCrossReference_6_1_0; }
		
		//EString
		public RuleCall getGuardGuardEStringParserRuleCall_6_1_0_1() { return cGuardGuardEStringParserRuleCall_6_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class GuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inria.fuchsia.gag.gagdsl.GagDsl.Guard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGuardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cClassPathKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassPathEStringParserRuleCall_3_0 = (RuleCall)cClassPathAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Guard specification::Guard:
		//	'Guard'
		//	'{'
		//	'classPath' classPath=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Guard' '{' 'classPath' classPath=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Guard'
		public Keyword getGuardKeyword_0() { return cGuardKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'classPath'
		public Keyword getClassPathKeyword_2() { return cClassPathKeyword_2; }
		
		//classPath=EString
		public Assignment getClassPathAssignment_3() { return cClassPathAssignment_3; }
		
		//EString
		public RuleCall getClassPathEStringParserRuleCall_3_0() { return cClassPathEStringParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private final ConfigurationElements pConfiguration;
	private final TaskElements pTask;
	private final EStringElements pEString;
	private final GAGElements pGAG;
	private final ELongElements pELong;
	private final EBooleanElements pEBoolean;
	private final ServiceElements pService;
	private final ValueElements pValue;
	private final EJavaObjectElements pEJavaObject;
	private final RuleElements pRule;
	private final GuardElements pGuard;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GagDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pConfiguration = new ConfigurationElements();
		this.pTask = new TaskElements();
		this.pEString = new EStringElements();
		this.pGAG = new GAGElements();
		this.pELong = new ELongElements();
		this.pEBoolean = new EBooleanElements();
		this.pService = new ServiceElements();
		this.pValue = new ValueElements();
		this.pEJavaObject = new EJavaObjectElements();
		this.pRule = new RuleElements();
		this.pGuard = new GuardElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("inria.fuchsia.gag.gagdsl.GagDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Configuration:
	//	'Configuration'
	//	name=EString
	//	'{'
	//	'root' root=[Task|EString]
	//	'consistent_to' consistent_to=[specification::GAG|EString]
	//	'}';
	public ConfigurationElements getConfigurationAccess() {
		return pConfiguration;
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}
	
	//Task:
	//	is_open?='is_open'?
	//	'Task'
	//	name=EString
	//	'{'
	//	'id' id=ELong ('appliedRule' appliedRule=EString)? ('instance_of' instance_of=[specification::Service|EString])?
	//	('sub_task' '{' sub_task+=Task ("," sub_task+=Task)* '}')?
	//	'}';
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//GAG specification::GAG:
	//	'GAG'
	//	name=EString
	//	'{'
	//	'rule' '{' rule+=Rule ("," rule+=Rule)* '}'
	//	'}';
	public GAGElements getGAGAccess() {
		return pGAG;
	}
	
	public ParserRule getGAGRule() {
		return getGAGAccess().getRule();
	}
	
	//ELong ecore::ELong:
	//	'-'? INT;
	public ELongElements getELongAccess() {
		return pELong;
	}
	
	public ParserRule getELongRule() {
		return getELongAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Service specification::Service:
	//	{specification::Service}
	//	'Service'
	//	name=EString
	//	'{' ('input' '{' input+=Value ("," input+=Value)* '}')? ('output' '{' output+=Value ("," output+=Value)* '}')?
	//	'}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//Value specification::Value:
	//	defined?='defined'
	//	'Value'
	//	name=EString
	//	'{' ('value' value=EJavaObject)? ('sub_value' '{' sub_value+=Value ("," sub_value+=Value)* '}')?
	//	'}';
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//EJavaObject ecore::EJavaObject:
	//	'EJavaObject' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EJavaObjectElements getEJavaObjectAccess() {
		return pEJavaObject;
	}
	
	public ParserRule getEJavaObjectRule() {
		return getEJavaObjectAccess().getRule();
	}
	
	//Rule specification::Rule:
	//	'Rule'
	//	name=EString
	//	'{'
	//	'left_hand_side' left_hand_side=[specification::Service|EString] ('right_hand_side_service' '('
	//	right_hand_side_service+=[specification::Service|EString] (","
	//	right_hand_side_service+=[specification::Service|EString])* ')')? ('guard' guard=[specification::Guard|EString])?
	//	'}';
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//Guard specification::Guard:
	//	'Guard'
	//	'{'
	//	'classPath' classPath=EString
	//	'}';
	public GuardElements getGuardAccess() {
		return pGuard;
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
