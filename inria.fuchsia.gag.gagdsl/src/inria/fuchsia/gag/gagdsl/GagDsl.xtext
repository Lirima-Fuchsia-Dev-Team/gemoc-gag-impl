// automatically generated by Xtext
grammar inria.fuchsia.gag.gagdsl.GagDsl with org.eclipse.xtext.common.Terminals

import "http://inria.fuchsia.gag.xdsml.gagmt/process/" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://inria.fuchsia.gag.xdsml.gagmt/specification/" as specification

Configuration returns Configuration:
	'Configuration'
	name=EString
	'{'
		'root' root=[Task|EString]
		'consistent_to' consistent_to=[specification::GAG|EString]
	'}';







Task returns Task:
	(is_open?='is_open')?
	'Task'
	name=EString
	'{'
		'id' id=ELong
		('appliedRule' appliedRule=EString)?
		('instance_of' instance_of=[specification::Service|EString])?
		('sub_task' '{' sub_task+=Task ( "," sub_task+=Task)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

GAG returns specification::GAG:
	'GAG'
	name=EString
	'{'
		'rule' '{' rule+=Rule ( "," rule+=Rule)* '}' 
	'}';

ELong returns ecore::ELong:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Service returns specification::Service:
	{specification::Service}
	'Service'
	name=EString
	'{'
		('input' '{' input+=Value ( "," input+=Value)* '}' )?
		('output' '{' output+=Value ( "," output+=Value)* '}' )?
	'}';

Value returns specification::Value:
	defined?='defined'
	'Value'
	name=EString
	'{'
		('value' value=EJavaObject)?
		('sub_value' '{' sub_value+=Value ( "," sub_value+=Value)* '}' )?
	'}';

EJavaObject returns ecore::EJavaObject:
	'EJavaObject' /* TODO: implement this rule and an appropriate IValueConverter */;

Rule returns specification::Rule:
	'Rule'
	name=EString
	'{'
		'left_hand_side' left_hand_side=[specification::Service|EString]
		('right_hand_side_service' '(' right_hand_side_service+=[specification::Service|EString] ( "," right_hand_side_service+=[specification::Service|EString])* ')' )?
		('guard' guard=[specification::Guard|EString])?
	'}';

Guard returns specification::Guard:
	'Guard'
	'{'
		'classPath' classPath=EString
	'}';
