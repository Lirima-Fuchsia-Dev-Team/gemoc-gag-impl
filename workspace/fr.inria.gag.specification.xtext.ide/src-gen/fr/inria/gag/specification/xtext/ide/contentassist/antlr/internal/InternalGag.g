/*
 * generated by Xtext 2.14.0
 */
grammar InternalGag;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.inria.gag.specification.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.gag.specification.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.inria.gag.specification.xtext.services.GagGrammarAccess;

}
@parser::members {
	private GagGrammarAccess grammarAccess;

	public void setGrammarAccess(GagGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGAG
entryRuleGAG
:
{ before(grammarAccess.getGAGRule()); }
	 ruleGAG
{ after(grammarAccess.getGAGRule()); } 
	 EOF 
;

// Rule GAG
ruleGAG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGAGAccess().getGroup()); }
		(rule__GAG__Group__0)
		{ after(grammarAccess.getGAGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleService
entryRuleService
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceAccess().getGroup()); }
		(rule__Service__Group__0)
		{ after(grammarAccess.getServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecompositionRule
entryRuleDecompositionRule
:
{ before(grammarAccess.getDecompositionRuleRule()); }
	 ruleDecompositionRule
{ after(grammarAccess.getDecompositionRuleRule()); } 
	 EOF 
;

// Rule DecompositionRule
ruleDecompositionRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getGroup()); }
		(rule__DecompositionRule__Group__0)
		{ after(grammarAccess.getDecompositionRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuard
entryRuleGuard
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuardAccess().getGroup()); }
		(rule__Guard__Group__0)
		{ after(grammarAccess.getGuardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemanticRule
entryRuleSemanticRule
:
{ before(grammarAccess.getSemanticRuleRule()); }
	 ruleSemanticRule
{ after(grammarAccess.getSemanticRuleRule()); } 
	 EOF 
;

// Rule SemanticRule
ruleSemanticRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticRuleAccess().getGroup()); }
		(rule__SemanticRule__Group__0)
		{ after(grammarAccess.getSemanticRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
		(rule__FunctionDeclaration__Group__0)
		{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquation
entryRuleEquation
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationAccess().getGroup()); }
		(rule__Equation__Group__0)
		{ after(grammarAccess.getEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdExpresssion
entryRuleIdExpresssion
:
{ before(grammarAccess.getIdExpresssionRule()); }
	 ruleIdExpresssion
{ after(grammarAccess.getIdExpresssionRule()); } 
	 EOF 
;

// Rule IdExpresssion
ruleIdExpresssion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdExpresssionAccess().getGroup()); }
		(rule__IdExpresssion__Group__0)
		{ after(grammarAccess.getIdExpresssionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionExpression
entryRuleFunctionExpression
:
{ before(grammarAccess.getFunctionExpressionRule()); }
	 ruleFunctionExpression
{ after(grammarAccess.getFunctionExpressionRule()); } 
	 EOF 
;

// Rule FunctionExpression
ruleFunctionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionExpressionAccess().getGroup()); }
		(rule__FunctionExpression__Group__0)
		{ after(grammarAccess.getFunctionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIdExpresssionParserRuleCall_0()); }
		ruleIdExpresssion
		{ after(grammarAccess.getExpressionAccess().getIdExpresssionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFunctionExpressionParserRuleCall_1()); }
		ruleFunctionExpression
		{ after(grammarAccess.getExpressionAccess().getFunctionExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group__0__Impl
	rule__GAG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getGAGAction_0()); }
	()
	{ after(grammarAccess.getGAGAccess().getGAGAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group__1__Impl
	rule__GAG__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getGAGKeyword_1()); }
	'GAG'
	{ after(grammarAccess.getGAGAccess().getGAGKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group__2__Impl
	rule__GAG__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getNameAssignment_2()); }
	(rule__GAG__NameAssignment_2)
	{ after(grammarAccess.getGAGAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getGroup_3()); }
	(rule__GAG__Group_3__0)?
	{ after(grammarAccess.getGAGAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GAG__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3__0__Impl
	rule__GAG__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getGAGAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3__1__Impl
	rule__GAG__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getServicesAssignment_3_1()); }
	(rule__GAG__ServicesAssignment_3_1)
	{ after(grammarAccess.getGAGAccess().getServicesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3__2__Impl
	rule__GAG__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getGroup_3_2()); }
	(rule__GAG__Group_3_2__0)*
	{ after(grammarAccess.getGAGAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getGAGAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GAG__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3_2__0__Impl
	rule__GAG__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getGAGAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GAG__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGAGAccess().getServicesAssignment_3_2_1()); }
	(rule__GAG__ServicesAssignment_3_2_1)
	{ after(grammarAccess.getGAGAccess().getServicesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getIsAxiomAssignment_0()); }
	(rule__Service__IsAxiomAssignment_0)?
	{ after(grammarAccess.getServiceAccess().getIsAxiomAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getNameAssignment_1()); }
	(rule__Service__NameAssignment_1)
	{ after(grammarAccess.getServiceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getGroup_2()); }
	(rule__Service__Group_2__0)?
	{ after(grammarAccess.getServiceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getGroup_3()); }
	(rule__Service__Group_3__0)?
	{ after(grammarAccess.getServiceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getServiceAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__5__Impl
	rule__Service__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__6__Impl
	rule__Service__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRulesAssignment_6()); }
	(rule__Service__RulesAssignment_6)
	{ after(grammarAccess.getServiceAccess().getRulesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__7__Impl
	rule__Service__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getGroup_7()); }
	(rule__Service__Group_7__0)*
	{ after(grammarAccess.getServiceAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2__0__Impl
	rule__Service__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getServiceAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2__1__Impl
	rule__Service__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getInputParametersAssignment_2_1()); }
	(rule__Service__InputParametersAssignment_2_1)
	{ after(grammarAccess.getServiceAccess().getInputParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2__2__Impl
	rule__Service__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getGroup_2_2()); }
	(rule__Service__Group_2_2__0)*
	{ after(grammarAccess.getServiceAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getServiceAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2_2__0__Impl
	rule__Service__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getServiceAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getInputParametersAssignment_2_2_1()); }
	(rule__Service__InputParametersAssignment_2_2_1)
	{ after(grammarAccess.getServiceAccess().getInputParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3__0__Impl
	rule__Service__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getServiceAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3__1__Impl
	rule__Service__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getOutputParametersAssignment_3_1()); }
	(rule__Service__OutputParametersAssignment_3_1)
	{ after(grammarAccess.getServiceAccess().getOutputParametersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3__2__Impl
	rule__Service__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getGroup_3_2()); }
	(rule__Service__Group_3_2__0)*
	{ after(grammarAccess.getServiceAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRightSquareBracketKeyword_3_3()); }
	']'
	{ after(grammarAccess.getServiceAccess().getRightSquareBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3_2__0__Impl
	rule__Service__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getServiceAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getOutputParametersAssignment_3_2_1()); }
	(rule__Service__OutputParametersAssignment_3_2_1)
	{ after(grammarAccess.getServiceAccess().getOutputParametersAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_7__0__Impl
	rule__Service__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getServiceAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRulesAssignment_7_1()); }
	(rule__Service__RulesAssignment_7_1)
	{ after(grammarAccess.getServiceAccess().getRulesAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecompositionRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__0__Impl
	rule__DecompositionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getDecompositionRuleAction_0()); }
	()
	{ after(grammarAccess.getDecompositionRuleAccess().getDecompositionRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__1__Impl
	rule__DecompositionRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getNameAssignment_1()); }
	(rule__DecompositionRule__NameAssignment_1)
	{ after(grammarAccess.getDecompositionRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__2__Impl
	rule__DecompositionRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDecompositionRuleAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__3__Impl
	rule__DecompositionRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGroup_3()); }
	(rule__DecompositionRule__Group_3__0)?
	{ after(grammarAccess.getDecompositionRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__4__Impl
	rule__DecompositionRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGroup_4()); }
	(rule__DecompositionRule__Group_4__0)?
	{ after(grammarAccess.getDecompositionRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGroup_5()); }
	(rule__DecompositionRule__Group_5__0)?
	{ after(grammarAccess.getDecompositionRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecompositionRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3__0__Impl
	rule__DecompositionRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getSubKeyword_3_0()); }
	'sub'
	{ after(grammarAccess.getDecompositionRuleAccess().getSubKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3__1__Impl
	rule__DecompositionRule__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getDecompositionRuleAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3__2__Impl
	rule__DecompositionRule__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesAssignment_3_2()); }
	(rule__DecompositionRule__SubServicesAssignment_3_2)
	{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGroup_3_3()); }
	(rule__DecompositionRule__Group_3_3__0)*
	{ after(grammarAccess.getDecompositionRuleAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecompositionRule__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3_3__0__Impl
	rule__DecompositionRule__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getDecompositionRuleAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesAssignment_3_3_1()); }
	(rule__DecompositionRule__SubServicesAssignment_3_3_1)
	{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecompositionRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_4__0__Impl
	rule__DecompositionRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGuardKeyword_4_0()); }
	'guard'
	{ after(grammarAccess.getDecompositionRuleAccess().getGuardKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getGuardAssignment_4_1()); }
	(rule__DecompositionRule__GuardAssignment_4_1)
	{ after(grammarAccess.getDecompositionRuleAccess().getGuardAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecompositionRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_5__0__Impl
	rule__DecompositionRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getSemKeyword_5_0()); }
	'sem'
	{ after(grammarAccess.getDecompositionRuleAccess().getSemKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_5__1__Impl
	rule__DecompositionRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getDecompositionRuleAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecompositionRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecompositionRuleAccess().getSemanticAssignment_5_2()); }
	(rule__DecompositionRule__SemanticAssignment_5_2)
	{ after(grammarAccess.getDecompositionRuleAccess().getSemanticAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getGuardKeyword_0()); }
	'Guard'
	{ after(grammarAccess.getGuardAccess().getGuardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__1__Impl
	rule__Guard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGuardAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__2__Impl
	rule__Guard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getClassPathKeyword_2()); }
	'classPath'
	{ after(grammarAccess.getGuardAccess().getClassPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__3__Impl
	rule__Guard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getClassPathAssignment_3()); }
	(rule__Guard__ClassPathAssignment_3)
	{ after(grammarAccess.getGuardAccess().getClassPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__4__Impl
	rule__Guard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getLibLocationKeyword_4()); }
	'libLocation'
	{ after(grammarAccess.getGuardAccess().getLibLocationKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__5__Impl
	rule__Guard__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getLibLocationAssignment_5()); }
	(rule__Guard__LibLocationAssignment_5)
	{ after(grammarAccess.getGuardAccess().getLibLocationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getGuardAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group__0__Impl
	rule__SemanticRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getSemanticRuleAction_0()); }
	()
	{ after(grammarAccess.getSemanticRuleAccess().getSemanticRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group__1__Impl
	rule__SemanticRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSemanticRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group__2__Impl
	rule__SemanticRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getGroup_2()); }
	(rule__SemanticRule__Group_2__0)?
	{ after(grammarAccess.getSemanticRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group__3__Impl
	rule__SemanticRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getGroup_3()); }
	(rule__SemanticRule__Group_3__0)?
	{ after(grammarAccess.getSemanticRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSemanticRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticRule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2__0__Impl
	rule__SemanticRule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getFuncKeyword_2_0()); }
	'func'
	{ after(grammarAccess.getSemanticRuleAccess().getFuncKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2__1__Impl
	rule__SemanticRule__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getSemanticRuleAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2__2__Impl
	rule__SemanticRule__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationAssignment_2_2()); }
	(rule__SemanticRule__FunctionDeclarationAssignment_2_2)
	{ after(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getGroup_2_3()); }
	(rule__SemanticRule__Group_2_3__0)*
	{ after(grammarAccess.getSemanticRuleAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticRule__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2_3__0__Impl
	rule__SemanticRule__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getSemanticRuleAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationAssignment_2_3_1()); }
	(rule__SemanticRule__FunctionDeclarationAssignment_2_3_1)
	{ after(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_3__0__Impl
	rule__SemanticRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getEquationsKeyword_3_0()); }
	'equations'
	{ after(grammarAccess.getSemanticRuleAccess().getEquationsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_3__1__Impl
	rule__SemanticRule__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getSemanticRuleAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_3__2__Impl
	rule__SemanticRule__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getEquationsAssignment_3_2()); }
	(rule__SemanticRule__EquationsAssignment_3_2)
	{ after(grammarAccess.getSemanticRuleAccess().getEquationsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticRule__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticRuleAccess().getEquationsAssignment_3_3()); }
	(rule__SemanticRule__EquationsAssignment_3_3)*
	{ after(grammarAccess.getSemanticRuleAccess().getEquationsAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_0()); }
	(rule__FunctionDeclaration__NameAssignment_0)
	{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getClassPathKeyword_2()); }
	'classPath'
	{ after(grammarAccess.getFunctionDeclarationAccess().getClassPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getClassPathAssignment_3()); }
	(rule__FunctionDeclaration__ClassPathAssignment_3)
	{ after(grammarAccess.getFunctionDeclarationAccess().getClassPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getMethodKeyword_4()); }
	'method'
	{ after(grammarAccess.getFunctionDeclarationAccess().getMethodKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getMethodAssignment_5()); }
	(rule__FunctionDeclaration__MethodAssignment_5)
	{ after(grammarAccess.getFunctionDeclarationAccess().getMethodAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__6__Impl
	rule__FunctionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getLibLocationKeyword_6()); }
	'libLocation'
	{ after(grammarAccess.getFunctionDeclarationAccess().getLibLocationKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__7__Impl
	rule__FunctionDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getLibLocationAssignment_7()); }
	(rule__FunctionDeclaration__LibLocationAssignment_7)
	{ after(grammarAccess.getFunctionDeclarationAccess().getLibLocationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getLeftpartAssignment_0()); }
	(rule__Equation__LeftpartAssignment_0)
	{ after(grammarAccess.getEquationAccess().getLeftpartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__1__Impl
	rule__Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__2__Impl
	rule__Equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getRightpartAssignment_2()); }
	(rule__Equation__RightpartAssignment_2)
	{ after(grammarAccess.getEquationAccess().getRightpartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdExpresssion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdExpresssion__Group__0__Impl
	rule__IdExpresssion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdExpresssionAccess().getServiceNameAssignment_0()); }
	(rule__IdExpresssion__ServiceNameAssignment_0)
	{ after(grammarAccess.getIdExpresssionAccess().getServiceNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdExpresssion__Group__1__Impl
	rule__IdExpresssion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdExpresssionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getIdExpresssionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdExpresssion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdExpresssionAccess().getParameterNameAssignment_2()); }
	(rule__IdExpresssion__ParameterNameAssignment_2)
	{ after(grammarAccess.getIdExpresssionAccess().getParameterNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group__0__Impl
	rule__FunctionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_0()); }
	(rule__FunctionExpression__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group__1__Impl
	rule__FunctionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group__2__Impl
	rule__FunctionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getGroup_2()); }
	(rule__FunctionExpression__Group_2__0)?
	{ after(grammarAccess.getFunctionExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group_2__0__Impl
	rule__FunctionExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsAssignment_2_0()); }
	(rule__FunctionExpression__IdExpresssionsAssignment_2_0)
	{ after(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getGroup_2_1()); }
	(rule__FunctionExpression__Group_2_1__0)*
	{ after(grammarAccess.getFunctionExpressionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group_2_1__0__Impl
	rule__FunctionExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsAssignment_2_1_1()); }
	(rule__FunctionExpression__IdExpresssionsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GAG__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGAGAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getGAGAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__ServicesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGAGAccess().getServicesServiceParserRuleCall_3_1_0()); }
		ruleService
		{ after(grammarAccess.getGAGAccess().getServicesServiceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GAG__ServicesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGAGAccess().getServicesServiceParserRuleCall_3_2_1_0()); }
		ruleService
		{ after(grammarAccess.getGAGAccess().getServicesServiceParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__IsAxiomAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getIsAxiomIsAxiomKeyword_0_0()); }
		(
			{ before(grammarAccess.getServiceAccess().getIsAxiomIsAxiomKeyword_0_0()); }
			'isAxiom'
			{ after(grammarAccess.getServiceAccess().getIsAxiomIsAxiomKeyword_0_0()); }
		)
		{ after(grammarAccess.getServiceAccess().getIsAxiomIsAxiomKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__InputParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getInputParametersParameterParserRuleCall_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getServiceAccess().getInputParametersParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__InputParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getInputParametersParameterParserRuleCall_2_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getServiceAccess().getInputParametersParameterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__OutputParametersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getOutputParametersParameterParserRuleCall_3_1_0()); }
		ruleParameter
		{ after(grammarAccess.getServiceAccess().getOutputParametersParameterParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__OutputParametersAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getOutputParametersParameterParserRuleCall_3_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getServiceAccess().getOutputParametersParameterParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__RulesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getRulesDecompositionRuleParserRuleCall_6_0()); }
		ruleDecompositionRule
		{ after(grammarAccess.getServiceAccess().getRulesDecompositionRuleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__RulesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getRulesDecompositionRuleParserRuleCall_7_1_0()); }
		ruleDecompositionRule
		{ after(grammarAccess.getServiceAccess().getRulesDecompositionRuleParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDecompositionRuleAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__SubServicesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceEStringParserRuleCall_3_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceEStringParserRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__SubServicesAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceCrossReference_3_3_1_0()); }
		(
			{ before(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceEStringParserRuleCall_3_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceEStringParserRuleCall_3_3_1_0_1()); }
		)
		{ after(grammarAccess.getDecompositionRuleAccess().getSubServicesServiceCrossReference_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__GuardAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getGuardGuardParserRuleCall_4_1_0()); }
		ruleGuard
		{ after(grammarAccess.getDecompositionRuleAccess().getGuardGuardParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecompositionRule__SemanticAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecompositionRuleAccess().getSemanticSemanticRuleParserRuleCall_5_2_0()); }
		ruleSemanticRule
		{ after(grammarAccess.getDecompositionRuleAccess().getSemanticSemanticRuleParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__ClassPathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardAccess().getClassPathEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getGuardAccess().getClassPathEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__LibLocationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardAccess().getLibLocationEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getGuardAccess().getLibLocationEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__FunctionDeclarationAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_2_2_0()); }
		ruleFunctionDeclaration
		{ after(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__FunctionDeclarationAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_2_3_1_0()); }
		ruleFunctionDeclaration
		{ after(grammarAccess.getSemanticRuleAccess().getFunctionDeclarationFunctionDeclarationParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__EquationsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticRuleAccess().getEquationsEquationParserRuleCall_3_2_0()); }
		ruleEquation
		{ after(grammarAccess.getSemanticRuleAccess().getEquationsEquationParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticRule__EquationsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticRuleAccess().getEquationsEquationParserRuleCall_3_3_0()); }
		ruleEquation
		{ after(grammarAccess.getSemanticRuleAccess().getEquationsEquationParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getFunctionDeclarationAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ClassPathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getClassPathEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getFunctionDeclarationAccess().getClassPathEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__MethodAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getMethodEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getFunctionDeclarationAccess().getMethodEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__LibLocationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getLibLocationEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getFunctionDeclarationAccess().getLibLocationEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__LeftpartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getLeftpartIdExpresssionParserRuleCall_0_0()); }
		ruleIdExpresssion
		{ after(grammarAccess.getEquationAccess().getLeftpartIdExpresssionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__RightpartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getRightpartExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationAccess().getRightpartExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__ServiceNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdExpresssionAccess().getServiceNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getIdExpresssionAccess().getServiceNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdExpresssion__ParameterNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdExpresssionAccess().getParameterNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getIdExpresssionAccess().getParameterNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionDeclarationEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionDeclarationEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__IdExpresssionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsIdExpresssionParserRuleCall_2_0_0()); }
		ruleIdExpresssion
		{ after(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsIdExpresssionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__IdExpresssionsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsIdExpresssionParserRuleCall_2_1_1_0()); }
		ruleIdExpresssion
		{ after(grammarAccess.getFunctionExpressionAccess().getIdExpresssionsIdExpresssionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
