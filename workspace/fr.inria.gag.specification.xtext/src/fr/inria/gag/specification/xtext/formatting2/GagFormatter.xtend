/*
 * generated by Xtext 2.14.0
 */
package fr.inria.gag.specification.xtext.formatting2

import com.google.inject.Inject
import fr.inria.gag.specification.model.specification.GAG
import fr.inria.gag.specification.model.specification.Service
import fr.inria.gag.specification.xtext.services.GagGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class GagFormatter extends AbstractFormatter2 {
	
	@Inject extension GagGrammarAccess

	def dispatch void format(GAG gAG, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (service : gAG.services) {
			service.format
		}
	}

	def dispatch void format(Service service, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (parameter : service.inputParameters) {
			parameter.format
		}
		for (parameter : service.outputParameters) {
			parameter.format
		}
		for (decompositionRule : service.rules) {
			decompositionRule.format
		}
	}
	
	// TODO: implement for DecompositionRule, SemanticRule, Equation, FunctionExpression
}
