[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	'http://www.eclipse.org/xtend', 
	'http://www.eclipse.org/xtend/RichString', 
	'http://www.eclipse.org/xtext/xbase/Xbase',
	'http://www.example.org/markedgraph') ]
[template public generate(aMarkedGraph : MarkedGraph)]
[comment @main/]
[file (aMarkedGraph.name+'_FiacreProcess.fcr', false, 'UTF-8')]
// *********************** Type Declaration ******************************/
const NUMBER_MarkedGraphs : int is [aMarkedGraph.eAllContents(MarkedGraph)->size()/]
const NUMBER_Places : int is [aMarkedGraph.eAllContents(Place)->size()/]
const NUMBER_Transitions : int is [aMarkedGraph.eAllContents(Transition)->size()/]

type Place_placesArray is array [MarkedGraph.eContents(Place)->size()/] of int
type Transition_transitionsArray is array [MarkedGraph.eContents(Transition)->size()/] of int
type Place_inputsArray is array [Transition.eContents(Place)->size()/] of int
type Place_outputsArray is array [Transition.eContents(Place)->size()/] of int


/*********************************************************************
Defining the Functions for : MarkedGraph
**********************************************************************/
/*********************************************************************
Defining the Functions for : Transition
**********************************************************************/
/*********************************************************************
Defining the Functions for : Place
**********************************************************************/
/************************* MarkedGraph Process Instances***************************/
[for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
process p[element.name/] ['['/][element.name/]_initIt:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:MarkedGraph
    from s0  [element.name/]_initIt; global:=MarkedGraph_initialize( global , global.refToElement_id) ;  to s0
[/for]
/************************* Transition Process Instances***************************/
[for (element : Transition| aMarkedGraph.eAllContents(Transition))]
process p[element.name/] ['['/][element.name/]_fireIt:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Transition
    from s0  [element.name/]_fireIt; global:=Transition_fire( global , global.refToElement_id) ;  to s0
[/for]
process pUnConstrainedSemantics['['/][for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
[element.name/]_initIt:out none,[/for][for (element : Transition| aMarkedGraph.eAllContents(Transition))]
[element.name/]_fireIt:out none,[/for][for (element : Place| aMarkedGraph.eAllContents(Place))]
[/for][']'/] is
	states s0
[for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
    from s0  [element.name/]_initIt;  to s0

[/for]
[for (element : Transition| aMarkedGraph.eAllContents(Transition))]
    from s0  [element.name/]_fireIt;  to s0

[/for]
[for (element : Place| aMarkedGraph.eAllContents(Place))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
[element.name/]_initIt:out none,[/for][for (element : Transition| aMarkedGraph.eAllContents(Transition))]
[element.name/]_fireIt:out none,[/for][for (element : Place| aMarkedGraph.eAllContents(Place))]
[/for][']'/] is
	
	states s0
[for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
    from s0  [element.name/]_initIt;  to s0

[/for]
[for (element : Transition| aMarkedGraph.eAllContents(Transition))]
    from s0  [element.name/]_fireIt;  to s0

[/for]
[for (element : Place| aMarkedGraph.eAllContents(Place))]

[/for]
[/file]
/******************** Process Parallelization for MarkedGraph******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
[element.name/]_initIt: none,

[/for][for (element : Transition| aMarkedGraph.eAllContents(Transition))]
[element.name/]_fireIt: none,
[/for][for (element : Place| aMarkedGraph.eAllContents(Place))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
[element.name/]_initIt,[/for][for (element : Transition| aMarkedGraph.eAllContents(Transition))]
[element.name/]_fireIt,[/for][for (element : Place| aMarkedGraph.eAllContents(Place))]
,[/for][']'/]
[for (element : MarkedGraph| aMarkedGraph.eAllContents(MarkedGraph))]
|| p[element.name/] ['['/][element.name/]_initIt[']'/] (&global, ID)
[/for]
[for (element : Transition| aMarkedGraph.eAllContents(Transition))]
|| p[element.name/] ['['/][element.name/]_fireIt[']'/] (&global, ID)
[/for]
[for (element : Place| aMarkedGraph.eAllContents(Place))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 
[/file]
[/template]
